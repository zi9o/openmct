{"version":3,"file":"platform/features/conductor-v2/conductor/res/css/time-conductor-espresso.css","sources":["platform/features/conductor-v2/conductor/res/sass/time-conductor-espresso.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/_bourbon.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/settings/_prefixer.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/settings/_px-to-em.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/settings/_asset-pipeline.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_assign-inputs.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_contains.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_contains-falsy.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_is-length.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_is-light.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_is-number.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_is-size.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_px-to-em.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_px-to-rem.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_shade.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_strip-units.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_tint.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_transition-property-name.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_unpack.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_modular-scale.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_convert-units.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_directional-values.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_font-source-declaration.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_gradient-positions-parser.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_linear-angle-parser.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_linear-gradient-parser.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_linear-positions-parser.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_linear-side-corner-parser.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_radial-arg-parser.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_radial-positions-parser.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_radial-gradient-parser.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_render-gradients.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_shape-size-stripper.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/helpers/_str-to-num.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_animation.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_appearance.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_backface-visibility.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_background.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_background-image.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_border-image.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_calc.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_columns.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_filter.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_flex-box.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_font-face.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_font-feature-settings.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_hidpi-media-query.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_hyphens.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_image-rendering.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_keyframes.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_linear-gradient.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_perspective.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_placeholder.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_radial-gradient.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_selection.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_text-decoration.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_transform.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_transition.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/css3/_user-select.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_border-color.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_border-radius.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_border-style.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_border-width.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_buttons.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_clearfix.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_ellipsis.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_font-stacks.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_hide-text.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_margin.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_padding.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_position.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_prefixer.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_retina-image.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_size.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_text-inputs.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_timing-functions.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_triangle.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/addons/_word-wrap.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/_bourbon-deprecated-upcoming.scss","platform/commonUI/general/res/sass/_constants.scss","platform/commonUI/general/res/sass/_mixins.scss","platform/commonUI/general/res/sass/mobile/_constants.scss","platform/commonUI/general/res/sass/mobile/_mixins.scss","platform/commonUI/themes/espresso/res/sass/_constants.scss","platform/commonUI/themes/espresso/res/sass/_mixins.scss","platform/commonUI/general/res/sass/_glyphs.scss","platform/commonUI/general/res/sass/_icons.scss","platform/features/conductor-v2/conductor/res/sass/_constants.scss","platform/features/conductor-v2/conductor/res/sass/_time-conductor-base.scss"],"sourcesContent":["/*****************************************************************************\n * Open MCT, Copyright (c) 2014-2015, United States Government\n * as represented by the Administrator of the National Aeronautics and Space\n * Administration. All rights reserved.\n *\n * Open MCT is licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n *\n * Open MCT includes source code licensed under additional open source\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\n * this source code distribution or the Licensing information page available\n * at runtime from the About dialog for additional information.\n *****************************************************************************/\n@import \"bourbon\";\n@import \"../../../../../commonUI/general/res/sass/constants\";\n@import \"../../../../../commonUI/general/res/sass/mixins\";\n@import \"../../../../../commonUI/general/res/sass/mobile/constants\";\n@import \"../../../../../commonUI/general/res/sass/mobile/mixins\";\n@import \"../../../../../commonUI/themes/espresso/res/sass/constants\";\n@import \"../../../../../commonUI/themes/espresso/res/sass/mixins\";\n@import \"../../../../../commonUI/general/res/sass/glyphs\";\n@import \"../../../../../commonUI/general/res/sass/icons\";\n@import \"constants\";\n\n// Thematic constants\n$colorTimeCondTicks: pullForward($colorBodyBg, 30%);\n$colorTimeCondKeyBg: #4e70dc;\n$colorTimeCondKeyFg: #fff;\n$colorTimeCondDataVisBg: pullForward($colorBodyBg, 10%);\n$colorTimeCondDataVisRtBg: pushBack($colorTimeCondKeyBg, 10%);\n@import \"time-conductor-base\";","// Bourbon 4.2.7\n// http://bourbon.io\n// Copyright 2011-2015 thoughtbot, inc.\n// MIT License\n\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n@import \"settings/asset-pipeline\";\n\n@import \"functions/assign-inputs\";\n@import \"functions/contains\";\n@import \"functions/contains-falsy\";\n@import \"functions/is-length\";\n@import \"functions/is-light\";\n@import \"functions/is-number\";\n@import \"functions/is-size\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/shade\";\n@import \"functions/strip-units\";\n@import \"functions/tint\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n@import \"functions/modular-scale\";\n\n@import \"helpers/convert-units\";\n@import \"helpers/directional-values\";\n@import \"helpers/font-source-declaration\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/font-feature-settings\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/hyphens\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/placeholder\";\n@import \"css3/radial-gradient\";\n@import \"css3/selection\";\n@import \"css3/text-decoration\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n\n@import \"addons/border-color\";\n@import \"addons/border-radius\";\n@import \"addons/border-style\";\n@import \"addons/border-width\";\n@import \"addons/buttons\";\n@import \"addons/clearfix\";\n@import \"addons/ellipsis\";\n@import \"addons/font-stacks\";\n@import \"addons/hide-text\";\n@import \"addons/margin\";\n@import \"addons/padding\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/text-inputs\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n@import \"bourbon-deprecated-upcoming\";\n","@charset \"UTF-8\";\n\n/// Global variables to enable or disable vendor prefixes\n\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default;\n","$em-base: 16px !default;\n","@charset \"UTF-8\";\n\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\n///\n/// @type Bool\n\n$asset-pipeline: false !default;\n","@function assign-inputs($inputs, $pseudo: null) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @param {List} $values\n///   A single value or list of values to check for.\n///\n/// @example scss - Usage\n///   contains($list, $value)\n///\n/// @return {Bool}\n\n@function contains($list, $values...) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list does not contains a value.\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @return {Bool}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @param {String} $value\n\n@function is-length($value) {\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\n       or index(auto inherit initial 0, $value)\n       or (type-of($value) == \"number\" and not(unitless($value))));\n}\n","@charset \"UTF-8\";\n\n/// Programatically determines whether a color is light or dark.\n///\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\n///\n/// @param {Color (Hex)} $color\n///\n/// @example scss - Usage\n///   is-light($color)\n///\n/// @return {Bool}\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1));\n  $-local-green: green(rgba($hex-color, 1));\n  $-local-blue: blue(rgba($hex-color, 1));\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > 0.6;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @param {Number} $value\n///\n/// @require {function} contains\n\n@function is-number($value) {\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @param {String} $value\n///\n/// @require {function} contains\n/// @require {function} is-length\n\n@function is-size($value) {\n  @return is-length($value)\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n","// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n","@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @param {Number (With Unit)} $value\n///\n/// @example scss - Usage\n///   $dimension: strip-units(10em);\n///\n/// @example css - CSS Output\n///   $dimension: 10;\n///\n/// @return {Number (Unitless)}\n\n@function strip-units($value) {\n  @return ($value / ($value * 0 + 1));\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n  $new-props: ();\n\n  @each $prop in $props {\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n  }\n\n  @return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n  // put other properties that need to be prefixed here aswell\n  @if $vendor and $prop == transform {\n    @return unquote('-'+$vendor+'-'+$prop);\n  }\n  @else {\n    @return $prop;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Converts shorthand to the 4-value syntax.\n///\n/// @param {List} $shorthand\n///\n/// @example scss - Usage\n///   .element {\n///     margin: unpack(1em 2em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n","// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n$modular-scale-ratio: $perfect-fourth !default;\n$modular-scale-base: em($em-base) !default;\n\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n","//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n\n  @if type-of($number) != \"number\" {\n    @warn \"`#{$number} is not a number`\";\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n","@charset \"UTF-8\";\n\n/// Directional-property mixins are shorthands for writing properties like the following\n///\n/// @ignore You can also use `false` instead of `null`.\n///\n/// @param {List} $vals\n///   List of directional values\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dotted null);\n///     @include margin(null 0 10px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: dotted;\n///     border-top-style: dotted;\n///     margin-bottom: 10px;\n///     margin-left: 0;\n///     margin-right: 0;\n///   }\n///\n/// @require {function} contains-falsy\n///\n/// @return {List}\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $a: nth($vals, 1);\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n\n/// Output directional properties, for instance `margin`.\n///\n/// @access private\n///\n/// @param {String} $pre\n///   Prefix to use\n/// @param {String} $suf\n///   Suffix to use\n/// @param {List} $vals\n///   List of values\n///\n/// @require {function} collapse-directionals\n/// @require {function} contains-falsy\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n  } @else {\n    #{$all}: $vals;\n  }\n}\n","// Used for creating the source string for fonts using @font-face\n// Reference: http://goo.gl/Ru1bKP\n\n@function font-url-prefixer($asset-pipeline) {\n  @if $asset-pipeline == true {\n    @return font-url;\n  } @else {\n    @return url;\n  }\n}\n\n@function font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats,\n  $font-url) {\n\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\n  );\n\n  @each $key, $values in $formats-map {\n    @if contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n","@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n","// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n","@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: is-number(str-slice($first-val, 1, 1));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatibility\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatibility\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n  @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n","// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n","@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\n  @each $value in $g1, $g2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $g1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $g1 {\n            $g1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $g1 {\n            $g1: null;\n          }\n\n          @else if $value == $g2 {\n            $g2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $g1, $g2, $pos, $shape-size;\n}\n","@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != \"  \") {\n    $spec: \"#{$spec},\";\n  }\n\n  @return $pre-spec $spec;\n}\n","@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    );\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n","@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n","//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    }\n\n    @else if $character == \".\" {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n","// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n@mixin animation($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n@mixin animation-name($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n@mixin animation-duration($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n@mixin animation-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n@mixin animation-iteration-count($values...) {\n  // infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n@mixin animation-direction($directions...) {\n  // normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n@mixin animation-play-state($states...) {\n  // running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n@mixin animation-delay($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n@mixin animation-fill-mode($modes...) {\n  // none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n","@mixin appearance($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n","@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n","//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or $background-type == list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 1, 3);\n      $gradient-type: str-slice($background-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n      $spec-background:   $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n","//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 1, 3);\n      $gradient-type: str-slice($image, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n        $spec-image:   $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n","@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 1, 3);\n      $gradient-type: str-slice($border-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n      $spec-border:   $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n","@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}: calc(#{$value});\n}\n","@mixin columns($arg: auto) {\n  // <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n  // auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n  // normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n  // auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n  // <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n  // none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n  // auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n","@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n","@mixin font-face(\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $asset-pipeline: $asset-pipeline,\n  $file-formats: eot woff2 woff ttf svg) {\n\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\n\n  @font-face {\n    font-family: $font-family;\n    font-style: $style;\n    font-weight: $weight;\n\n    src: font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats,\n      $font-url-prefix\n    );\n  }\n}\n","@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}\n","// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: round($ratio * 96dpi)),\n  only screen and (min-resolution: $ratio * 1dppx) {\n    @content;\n  }\n}\n","@mixin hyphens($hyphenation: none) {\n  // none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}\n","@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -o-crisp-edges;\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: crisp-edges;\n  }\n\n  @else {\n    image-rendering: $mode;\n  }\n}\n","// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n","@mixin linear-gradient($pos, $g1, $g2: null,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\n    $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Set $g1 as the default fallback color\n  $fallback-color: nth($g1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n","@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n","@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n","// Requires Sass 3.1+\n@mixin radial-gradient($g1, $g2,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\n  $g1:  nth($data, 1);\n  $g2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $g1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\n  $pos:        if($pos, \"#{$pos}, \", null);\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(#{$pos}#{$shape-size}#{$full});\n  background-image: radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full});\n}\n","@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@mixin text-decoration($value) {\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\n  @include prefixer(text-decoration, $value, moz);\n}\n\n@mixin text-decoration-line($line: none) {\n// none || underline || overline || line-through\n  @include prefixer(text-decoration-line, $line, moz);\n}\n\n@mixin text-decoration-style($style: solid) {\n// solid || double || dotted || dashed || wavy\n  @include prefixer(text-decoration-style, $style, moz webkit);\n}\n\n@mixin text-decoration-color($color: currentColor) {\n// currentColor || <color>\n  @include prefixer(text-decoration-color, $color, moz);\n}\n","@mixin transform($property: none) {\n  // none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n  // x-axis - left | center | right  | length | %\n  // y-axis - top  | center | bottom | length | %\n  // z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n","// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n      $moz:    append($moz,    $list2);\n      $spec:   append($spec,   $list3);\n    } @else {\n      $webkit: append($webkit, $list, comma);\n      $moz:    append($moz,    $list, comma);\n      $spec:   append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  } @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    } @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property($properties...) {\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\n     -moz-transition-property: transition-property-names($properties, \"moz\");\n          transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n","@mixin user-select($value: none) {\n  @include prefixer(user-select, $value, webkit moz ms spec);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-color`\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\n///\n/// @param {Number} $radii\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element-one {\n///     @include border-top-radius(5px);\n///   }\n///\n///   .element-two {\n///     @include border-left-radius(3px);\n///   }\n///\n/// @example css - CSS Output\n///   .element-one {\n///     border-top-left-radius: 5px;\n///     border-top-right-radius: 5px;\n///   }\n///\n///   .element-two {\n///     border-bottom-left-radius: 3px;\n///     border-top-left-radius: 3px;\n///   }\n///\n/// @output `border-radius`\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-style`\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-width`\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\n///\n/// @example scss - Usage\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   #{$all-buttons-focus},\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n/// @example css - CSS Output\n///   button,\n///   input[type=\"button\"],\n///   input[type=\"reset\"],\n///   input[type=\"submit\"] {\n///     background-color: #f00;\n///   }\n///\n///   button:focus,\n///   input[type=\"button\"]:focus,\n///   input[type=\"reset\"]:focus,\n///   input[type=\"submit\"]:focus,\n///   button:hover,\n///   input[type=\"button\"]:hover,\n///   input[type=\"reset\"]:hover,\n///   input[type=\"submit\"]:hover {\n///     background-color: #0f0;\n///   }\n///\n///   button:active,\n///   input[type=\"button\"]:active,\n///   input[type=\"reset\"]:active,\n///   input[type=\"submit\"]:active {\n///     background-color: #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n///\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\n\n$buttons-list: 'button',\n               'input[type=\"button\"]',\n               'input[type=\"reset\"]',\n               'input[type=\"submit\"]';\n\n$all-buttons:        assign-inputs($buttons-list);\n$all-buttons-active: assign-inputs($buttons-list, active);\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\n\n$all-button-inputs:        $all-buttons;\n$all-button-inputs-active: $all-buttons-active;\n$all-button-inputs-focus:  $all-buttons-focus;\n$all-button-inputs-hover:  $all-buttons-hover;\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @param {Number} $width [100%]\n///   Max-width for the string to respect before being truncated\n///\n/// @example scss - Usage\n///   .element {\n///     @include ellipsis;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n","@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n","/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\n///\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\n///\n/// @example scss - Usage\n///   .element {\n///     @include hide-text;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n///\n/// @todo Remove height argument in v5.0.0\n\n@mixin hide-text($height: null) {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n\n  @if $height {\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include margin(null 10px 3em 20vh);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-bottom: 3em;\n///     margin-left: 20vh;\n///     margin-right: 10px;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `margin`\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include padding(12vh null 10px 5%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 12vh;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `padding`\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\n///\n/// @param {Position} $position [relative]\n///   A CSS position value\n///\n/// @param {Arglist} $coordinates [null null null null]\n///   List of values that correspond to the 4-value syntax for the edges of a box\n///\n/// @example scss - Usage\n///   .element {\n///     @include position(absolute, 0 null null 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     left: 10em;\n///     position: absolute;\n///     top: 0;\n///   }\n///\n/// @require {function} is-length\n/// @require {function} unpack\n\n@mixin position($position: relative, $coordinates: null null null null) {\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $offsets: (\n    top:    nth($coordinates, 1),\n    right:  nth($coordinates, 2),\n    bottom: nth($coordinates, 3),\n    left:   nth($coordinates, 4)\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  } @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    } @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element.\n///\n/// @param {List} $size\n///   A list of at most 2 size values.\n///\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\n///\n/// @example scss - Usage\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   .second-element {\n///     @include size(auto 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\n\n@mixin size($value) {\n  $width: nth($value, 1);\n  $height: $width;\n\n  @if length($value) > 1 {\n    $height: nth($value, 2);\n  }\n\n  @if is-size($height) {\n    height: $height;\n  } @else {\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\n  }\n\n  @if is-size($width) {\n    width: $width;\n  } @else {\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\n///\n/// @example scss - Usage\n///   #{$all-text-inputs} {\n///     border: 1px solid #f00;\n///   }\n///\n///   #{$all-text-inputs-focus},\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #0f0;\n///   }\n///\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #00f;\n///   }\n///\n/// @example css - CSS Output\n///   input[type=\"color\"],\n///   input[type=\"date\"],\n///   input[type=\"datetime\"],\n///   input[type=\"datetime-local\"],\n///   input[type=\"email\"],\n///   input[type=\"month\"],\n///   input[type=\"number\"],\n///   input[type=\"password\"],\n///   input[type=\"search\"],\n///   input[type=\"tel\"],\n///   input[type=\"text\"],\n///   input[type=\"time\"],\n///   input[type=\"url\"],\n///   input[type=\"week\"],\n///   textarea {\n///     border: 1px solid #f00;\n///   }\n///\n///   input[type=\"color\"]:focus,\n///   input[type=\"date\"]:focus,\n///   input[type=\"datetime\"]:focus,\n///   input[type=\"datetime-local\"]:focus,\n///   input[type=\"email\"]:focus,\n///   input[type=\"month\"]:focus,\n///   input[type=\"number\"]:focus,\n///   input[type=\"password\"]:focus,\n///   input[type=\"search\"]:focus,\n///   input[type=\"tel\"]:focus,\n///   input[type=\"text\"]:focus,\n///   input[type=\"time\"]:focus,\n///   input[type=\"url\"]:focus,\n///   input[type=\"week\"]:focus,\n///   textarea:focus,\n///   input[type=\"color\"]:hover,\n///   input[type=\"date\"]:hover,\n///   input[type=\"datetime\"]:hover,\n///   input[type=\"datetime-local\"]:hover,\n///   input[type=\"email\"]:hover,\n///   input[type=\"month\"]:hover,\n///   input[type=\"number\"]:hover,\n///   input[type=\"password\"]:hover,\n///   input[type=\"search\"]:hover,\n///   input[type=\"tel\"]:hover,\n///   input[type=\"text\"]:hover,\n///   input[type=\"time\"]:hover,\n///   input[type=\"url\"]:hover,\n///   input[type=\"week\"]:hover,\n///   textarea:hover {\n///     border: 1px solid #0f0;\n///   }\n///\n///   input[type=\"color\"]:active,\n///   input[type=\"date\"]:active,\n///   input[type=\"datetime\"]:active,\n///   input[type=\"datetime-local\"]:active,\n///   input[type=\"email\"]:active,\n///   input[type=\"month\"]:active,\n///   input[type=\"number\"]:active,\n///   input[type=\"password\"]:active,\n///   input[type=\"search\"]:active,\n///   input[type=\"tel\"]:active,\n///   input[type=\"text\"]:active,\n///   input[type=\"time\"]:active,\n///   input[type=\"url\"]:active,\n///   input[type=\"week\"]:active,\n///   textarea:active {\n///     border: 1px solid #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n\n$text-inputs-list: 'input[type=\"color\"]',\n                   'input[type=\"date\"]',\n                   'input[type=\"datetime\"]',\n                   'input[type=\"datetime-local\"]',\n                   'input[type=\"email\"]',\n                   'input[type=\"month\"]',\n                   'input[type=\"number\"]',\n                   'input[type=\"password\"]',\n                   'input[type=\"search\"]',\n                   'input[type=\"tel\"]',\n                   'input[type=\"text\"]',\n                   'input[type=\"time\"]',\n                   'input[type=\"url\"]',\n                   'input[type=\"week\"]',\n                   'input:not([type])',\n                   'textarea';\n\n$all-text-inputs:        assign-inputs($text-inputs-list);\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\n","@charset \"UTF-8\";\n\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n///\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\n///\n/// @type cubic-bezier\n\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n","@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to change the `word-wrap` property.\n///\n/// @param {String} $wrap [break-word]\n///   Value for the `word-break` property.\n///\n/// @example scss - Usage\n///   .wrapper {\n///     @include word-wrap(break-word);\n///   }\n///\n/// @example css - CSS Output\n///   .wrapper {\n///     overflow-wrap: break-word;\n///     word-break: break-all;\n///     word-wrap: break-word;\n///   }\n\n@mixin word-wrap($wrap: break-word) {\n  overflow-wrap: $wrap;\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    word-break: break-all;\n  } @else {\n    word-break: $wrap;\n  }\n}\n","// The following features have been deprecated and will be removed in the next MAJOR version release\n\n@mixin inline-block {\n  display: inline-block;\n\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\n}\n\n// Selector Style Button\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n// Simple Button\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n// Shiny Button\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n// Pill Button\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    background-clip: padding-box;\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n// Flat Button\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: 0;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n\n// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\n}\n\n@function golden-ratio($value, $increment) {\n  @return modular-scale($increment, $value, $ratio: $golden);\n\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\n}\n\n@mixin box-sizing($box) {\n  @include prefixer(box-sizing, $box, webkit moz spec);\n\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\n}\n","/*****************************************************************************\n * Open MCT, Copyright (c) 2014-2016, United States Government\n * as represented by the Administrator of the National Aeronautics and Space\n * Administration. All rights reserved.\n *\n * Open MCT is licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n *\n * Open MCT includes source code licensed under additional open source\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\n * this source code distribution or the Licensing information page available\n * at runtime from the About dialog for additional information.\n *****************************************************************************/\n\n/************************** FEATURES */\n$enableImageryThumbs: false; // Set to true if historical imagery thumbnails are supported\n\n/************************** VERY INFLUENTIAL GLOBAL DIMENSIONS */\n$bodyMargin: 10px;\n$interiorMargin: 5px;\n$interiorMarginLg: $interiorMargin * 2;\n$interiorMarginSm: 3px;\n$badgeW: 35px;\n\n/************************** RATIOS */\n$ltGamma: 20%;\n$btnFontSizeToH: 0.45;\n\n/************************** LAYOUT */\n$ueTopBarH: 24px;\n$ueTopBarEditH: 30px;\n$ueTopBarBtnH: 35px;\n$ueFooterH: 25px;\n$ueColMargin: 1.5%;\n$ueAppLogoW: 80px;\n$ueEditToolBarH: 25px;\n$ueCollapsedPaneEdgeM: 22px;\n$uePaneMiniTabH: 22px;\n$uePaneMiniTabW: 8px;\n$uePaneMiniTabFontSize: 8px;\n$uePaneMiniTabCollapsedW: 18px;\n$ueEditLeftPaneW: 75%;\n$treeSearchInputBarH: 25px;\n/*************** Panes */\n$ueBrowseLeftPaneTreeMinW: 150px;\n$ueBrowseLeftPaneTreeMaxW: 35%;\n$ueBrowseLeftPaneTreeW: 25%;\n$ueBrowseRightPaneInspectMinW: 200px;\n$ueBrowseRightPaneInspectMaxW: 35%;\n$ueBrowseRightPaneInspectW: 20%;\n$ueDesktopMinW: 600px;\n/*************** Overlay */\n$ovrTopBarH: 45px;\n$ovrFooterH: 24px;\n$overlayMargin: 25px;\n/*************** Items */\n$ueBrowseGridItemLg: 200px;\n$ueBrowseGridItemTopBarH: 20px;\n$ueBrowseGridItemBottomBarH: 30px;\n$itemPadLR: 5px;\n/*************** Tree */\n$treeVCW: 10px;\n$treeTypeIconH: 1.4em; // was 16px\n$treeTypeIconHPx: 16px;\n$treeTypeIconW: 18px;\n$treeContextTriggerW: 20px;\n/*************** Tabular */\n$tabularHeaderH: 22px;\n$tabularTdPadLR: $itemPadLR;\n$tabularTdPadTB: 3px;\n/*************** Imagery */\n$imageMainControlBarH: 25px;\n$imageThumbsD: 120px;\n$imageThumbsWrapperH: $imageThumbsD * 1.4;\n$imageThumbPad: 1px;\n/*************** Ticks */\n$ticksH: 25px;\n$tickLblVMargin: 3px;\n$tickLblH: 15px;\n$tickLblW: 50px;\n$tickH: $ticksH - $tickLblVMargin - $tickLblH;\n$tickW: 1px;\n/*************** Plots */\n$plotYBarW: 60px;\n$plotYLabelMinH: 20px;\n$plotYLabelW: 10px;\n$plotXBarH: 32px;\n$plotLegendH: 20px;\n$plotSwatchD: 8px;\n// 1: Top, 2: right, 3: bottom, 4: left\n$plotDisplayArea: ($plotLegendH + $interiorMargin, 0, $plotXBarH + $interiorMargin, $plotYBarW);\n/* min plot height is based on user testing to find minimum useful height */\n$plotMinH: 95px;\n/*************** Bubbles */\n$bubbleArwSize: 10px;\n$bubblePad: $interiorMargin;\n$bubbleMinW: 100px;\n$bubbleMaxW: 300px;\n/*************** Forms */\n$reqSymbolW: 15px;\n$reqSymbolM: $interiorMargin * 2;\n$reqSymbolFontSize: 0.75em;\n$inputTextP: 3px 5px;\n/*************** Wait Spinner Defaults */\n$waitSpinnerD: 32px;\n$waitSpinnerTreeD: 20px;\n$waitSpinnerBorderW: 5px;\n$waitSpinnerTreeBorderW: 4px;\n\n/************************** CONTROLS */\n$controlDisabledOpacity: 0.3;\n$formLabelW: 30%;\n$formInputH: 22px;\n$formRowCtrlsH: 14px;\n$formTBPad: $interiorMargin;\n$formLRPad: $interiorMargin;\n$menuLineH: 1.5rem;\n$menuLineHPx: 24px;\n$btnStdH: 25px;\n$btnToolbarH: $btnStdH;\n$controlBarH: $btnStdH;\n$btnFrameH: 16px;\n\n/************************** PATHS */\n// Paths need to be relative to /platform/commonUI/theme/<theme-name>/css/ directory\n$dirCommonRes: '../../../../general/res/';\n$dirImgs: $dirCommonRes + 'images/';\n\n/************************** TIMINGS */\n$controlFadeMs: 100ms;\n$browseToEditAnimMs: 400ms;\n$editBorderPulseMs: 500ms;\n","/*****************************************************************************\n * Open MCT, Copyright (c) 2014-2016, United States Government\n * as represented by the Administrator of the National Aeronautics and Space\n * Administration. All rights reserved.\n *\n * Open MCT is licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n *\n * Open MCT includes source code licensed under additional open source\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\n * this source code distribution or the Licensing information page available\n * at runtime from the About dialog for additional information.\n *****************************************************************************/\n\n@mixin absPosDefault($offset: 0px, $overflowHidden: hidden) {\n    overflow: $overflowHidden;\n    position: absolute;\n    top: $offset;\n    right: $offset;\n    bottom: $offset;\n    left: $offset;\n    width: auto;\n    height: auto;\n}\n\n@mixin ancillaryIcon($d, $c) {\n    // Used for small icons used in combination with larger icons,\n    // like the link and alert icons in tree items.\n    color: $c;\n    font-size: $d;\n    line-height: $d;\n    height: $d;\n    width: $d;\n}\n\n@mixin trans-prop-nice($props, $dur: 500ms, $delay: 0) {\n    // Multiple $props must be in parans like this: (left, right)\n    @if $dur == 0 {\n        @include transition-property(none);\n    } @else {\n        @include transition-property($props);\n        @include transition-duration($dur);\n        @include transition-timing-function(ease-in-out);\n        @include transition-delay($delay);\n    }\n}\n\n@mixin trans-prop-nice-fade($dur: 500ms, $delay: 0) {\n    @if $dur == 0 {\n        @include transition-property(none);\n    } @else {\n        @include transition-property(opacity, background-color, border-color, color);\n        @include transition-duration($dur);\n        @include transition-timing-function(ease-in-out);\n        @include transition-delay($delay);\n    }\n}\n\n@mixin trans-prop-nice-resize($t: 0.5s, $tf: ease-in-out) {\n    @include transition-property(height, width, top, right, bottom, left, opacity);\n    @include transition-duration($t);\n    @include transition-timing-function($tf);\n}\n\n@mixin trans-prop-nice-resize-h($dur: 500ms, $delay: 0) {\n    @include transition-property(height, bottom, top);\n    @include transition-duration($dur);\n    @include transition-timing-function(ease-in-out);\n    @include transition-delay($delay);\n}\n\n@mixin trans-prop-nice-resize-w($dur: 500ms, $delay: 0) {\n    @include transition-property(width, left, right);\n    @include transition-duration($dur);\n    @include transition-timing-function(ease-in-out);\n    @include transition-delay($delay);\n}\n\n@mixin triangle-right($size, $color) {\n    $size: $size/2;\n    $ratio: 1;\n    width: 0;\n    height: 0;\n    border-top: $size/$ratio solid transparent;\n    border-left: $size solid $color;\n    border-bottom: $size/$ratio solid transparent;\n}\n\n@mixin triangle-down($size, $color) {\n    $size: $size/2;\n    $ratio: 1;\n    width: 0;\n    height: 0;\n    border-left: $size/$ratio solid transparent;\n    border-top: $size solid $color;\n    border-right: $size/$ratio solid transparent;\n}\n\n@mixin triangle($dir: \"left\", $size: 5px, $ratio: 1, $color: red) {\n    width: 0;\n    height: 0;\n    $slopedB: $size/$ratio solid transparent;\n    $straightB: $size solid $color;\n    @if $dir == \"up\" {\n        border-left: $slopedB;\n        border-right: $slopedB;\n        border-bottom: $straightB;\n    } @else if $dir == \"right\" {\n        border-top: $slopedB;\n        border-bottom: $slopedB;\n        border-left: $straightB;\n    } @else if $dir == \"down\" {\n        border-left: $slopedB;\n        border-right: $slopedB;\n        border-top: $straightB;\n    } @else {\n        border-top: $slopedB;\n        border-bottom: $slopedB;\n        border-right: $straightB;\n    }\n}\n\n@mixin bgDiagonalStripes($c: yellow, $a: 0.1, $d: 40px) {\n    @include background-image(linear-gradient(-45deg,\n        rgba($c, $a) 25%, transparent 25%,\n        transparent 50%, rgba($c, $a) 50%,\n        rgba($c, $a) 75%, transparent 75%,\n        transparent 100%\n    ));\n    background-repeat: repeat;\n    background-size: $d $d;\n}\n\n@mixin bgStripes($c: yellow, $a: 0.1, $bgsize: 5px, $angle: 90deg) {\n    @include background-image(linear-gradient($angle,\n        rgba($c, $a) 25%, transparent 25%,\n        transparent 50%, rgba($c, $a) 50%,\n        rgba($c, $a) 75%, transparent 75%,\n        transparent 100%\n    ));\n    background-repeat: repeat;\n    background-size: $bgsize $bgsize;\n}\n\n@mixin bgVertStripes($c: yellow, $a: 0.1, $d: 40px) {\n    @include background-image(linear-gradient(-90deg,\n        rgba($c, $a) 0%, rgba($c, $a) 50%,\n        transparent 50%, transparent 100%\n    ));\n    background-repeat: repeat;\n    background-size: $d $d;\n}\n\n@mixin bgVertFuzzyStripes($c: yellow, $a: 0.1, $d: 40px) {\n    @include background-image(linear-gradient(-90deg,\n        rgba($c, $a) 0%, transparent 50%,\n        transparent 50%, rgba($c, $a) 100%\n    ));\n    background-repeat: repeat;\n    background-size: $d $d;\n}\n\n@mixin bgTicks($c: $colorBodyFg, $repeatDir: 'x') {\n    $deg: 90deg;\n    @if ($repeatDir != 'x') {\n        $deg: 0deg;\n        $repeatDir: repeat-y;\n    } @else {\n        $repeatDir: repeat-x;\n    }\n\n    @include background-image(linear-gradient($deg,\n        $c 1px, transparent 1px,\n        transparent 100%\n    ));\n    background-repeat: $repeatDir;\n}\n\n@mixin sliderTrack($bg: $scrollbarTrackColorBg) {\n    border-radius: 2px;\n    box-sizing: border-box;\n    @include boxIncised(0.7);\n    background-color: $bg;\n}\n\n@mixin controlGrippy($b, $direction: horizontal, $w: 1px, $style: dotted) {\n    content: '';\n    display: block;\n    pointer-events: none;\n    position: absolute;\n    z-index: 2;\n\n    @if $direction == \"horizontal\" {\n        border-top: $w $style darken($b, 15%);\n        top: 2px;\n        left: 5px;\n        right: 5px;\n        height: 1px;\n\n    } @else if $direction == \"vertical\" {\n        border-left: $w $style darken($b, 15%);\n        left: 2px;\n        bottom: 5px;\n        top: 5px;\n        width: 1px;\n    }\n}\n\n@mixin boxIncised($sVal: 0.6, $inset: 5px) {\n    box-shadow: inset rgba(black, $sVal) 0 1px $inset;\n}\n\n@mixin boxOutline($c: lighten($colorBodyBg, 20%)) {\n    border: 1px solid $c;\n}\n\n@mixin boxShdw($sVal: rgba(black, 0.4) 0 0 3px) {\n\t@if $sVal != 'none' {\n\t\tbox-shadow: $sVal;\n\t}\n}\n\n@mixin boxShdwSubtle($sVal: 0.2) {\n\t@if $sVal != 'none' {\n\t\tbox-shadow: rgba(black, $sVal) 0 1px 2px;\n\t}\n}\n\n@mixin boxShdwLarge($sVal: 0.7) {\n\t@if $sVal != 'none' {\n\t\tbox-shadow: rgba(black, $sVal) 0 3px 10px;\n\t}\n}\n\n@mixin outerGlow($color: #fff, $sVal: 0.3) {\n    box-shadow: rgba($color, $sVal) 0 0 30px;\n}\n\n@mixin linearGlow($deg: 0, $c: red, $a: 0.4) {\n    @include background-image(linear-gradient($deg, rgba($c, 0), rgba($c, $a) 100%));\n}\n\n@mixin subtleGrad($deg: 0, $c: red, $a0: 0.2, $a1: 0.3) {\n    @include background-image(linear-gradient($deg, rgba($c, $a0), rgba($c, $a1) 100%));\n}\n\n@mixin txtShdw($sVal) {\n\t//@if $sVal != 'none' {\n\t\ttext-shadow: $sVal;\n\t//}\n}\n\n@mixin txtShdwSubtle($sVal: 0.1) {\n\t@if $sVal != 'none' {\n\t    text-shadow: rgba(black, $sVal) 0 1px 2px;\n\t}\n}\n\n@mixin txtShdwLarge($sVal: 0.7) {\n    text-shadow: rgba(black, $sVal) 0 3px 7px;\n}\n\n@function percentToDecimal($p) {\n\t@return $p / 100%;\n}\n\n@function decimalToPercent($d) {\n\t@return percentage($d);\n}\n\n@function splitterHandleInset($splitterD: 21px, $splitterHandleD: 1px) {\n    // Space to either side of the handle\n    @return ($splitterD - $splitterHandleD) / 2;\n}\n\n/*********************************************** CONTROLS, FORM ELEMENTS */\n\n@mixin containerBase($bg: $colorBodyBg, $fg: $colorBodyFg) {\n\tbackground-color: $bg;\n\tborder-radius: $controlCr;\n\tbox-sizing: border-box;\n\tcolor: $fg;\n}\n\n@mixin btnBase($bg: $colorBtnBg, $bgHov: $colorBtnBgHov, $fg: $colorBtnFg, $fgHov: $colorBtnFgHov, $ic: $colorBtnIcon, $icHov: $colorBtnIconHov) {\n\t@include user-select(none);\n    color: $fg;\n\t.icon,\n    &:before {\n\t\tcolor: $ic;\n\t}\n  @if $bgHov != none {\n      &:not(.disabled):hover {\n          background: $bgHov;\n          color: $fgHov;\n          >.icon,\n          &:before {\n              color: $icHov;\n          }\n      }\n  }\n}\n\n@mixin btnSubtle($bg: $colorBtnBg, $bgHov: $colorBtnBgHov, $fg: $colorBtnFg, $fgHov: $colorBtnFgHov, $ic: $colorBtnIcon, $icHov: $colorBtnIconHov) {\n    @include containerSubtle($bg, $fg);\n    @include btnBase($bgHov: $bgHov, $fg: $fg, $fgHov: $fgHov, $ic: $ic, $icHov: $icHov);\n    text-shadow: $shdwItemText;\n}\n\n@mixin input-base($bg: $colorInputBg, $fg: $colorInputFg, $shdw: rgba(black, 0.6) 0 1px 3px) {\n\t@include appearance(none);\n\tborder-radius: $controlCr;\n\tbox-sizing: border-box;\n\tbox-shadow: inset $shdw;\n\tbackground: $bg;\n\tborder: none;\n\tcolor: $fg;\n\toutline: none;\n\t&.error {\n\t\tbackground-color: $colorFormFieldErrorBg;\n        color: $colorFormFieldErrorFg;\n\t}\n}\n\n@mixin nice-input($bg: $colorInputBg, $fg: $colorInputFg) {\n\t@include input-base($bg, $fg);\n}\n\n@mixin contextArrow() {\n\ttext-shadow: none;\n\tcontent: $glyph-icon-arrow-down;\n\tdisplay: inline-block;\n\tfont-family: 'symbolsfont';\n\tmargin-left: $interiorMarginSm;\n}\n\n@mixin nice-textarea($bg: $colorBodyBg, $fg: $colorBodyFg) {\n    @include input-base($bg, $fg);\n    padding: $interiorMargin;\n}\n\n@mixin subdued-input($bg: $colorBodyBg, $fg: $colorBodyFg) {\n    @include nice-input($bg, $fg);\n    background: lighten($bg, 3%);\n    border-bottom: 1px solid lighten($bg, 10%);\n}\n\n@mixin menuUlReset() {\n    margin: 0;\n    padding: 0;\n    li {\n        list-style-type: none;\n        margin: 0;\n        padding: 0;\n    }\n}\n\n@mixin webkitProp($name, $val) {\n\t#{$name}: #{$val};\n\t-webkit-#{$name}: #{$val};\n}\n\n@mixin webkitVal($name, $val) {\n\t#{$name}: #{$val};\n\t#{$name}: -webkit-#{$val};\n}\n\n@mixin verticalCenter {\n    /* This doesn't work on an element inside an element with absolute positioning that has height: auto */\n    //position: relative;\n    top: 50%;\n    @include transform(translateY(-50%));\n}\n\n@mixin verticalCenterBlock($holderH, $itemH) {\n    top: floor(($holderH - $itemH) / 2);\n    bottom: auto;\n    height: $itemH;\n}\n\n@mixin ellipsize() {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n@mixin scrollH($showBar: auto) {\n    overflow-x: $showBar;\n    overflow-y: hidden;\n}\n\n@mixin scrollV($showBar: auto) {\n    overflow-x: hidden;\n    overflow-y: $showBar;\n}\n\n@mixin test($c: #ffcc00, $a: 0.2) {\n    background-color: rgba($c, $a) !important;\n}\n\n@mixin tmpBorder($c: #ffcc00, $a: 0.75) {\n    box-sizing: border-box;\n    border: 1px dotted rgba($c, $a);\n}\n\n@mixin testObj($w: 2000px, $h: 1000px, $c: black, $a: 0.1) {\n    &:after {\n        box-sizing: border-box;\n        @include bgDiagonalStripes($c, $a);\n        color: rgba(white, 0.3);\n        font-style: italic;\n        content: \"Test Object\";\n        display: block;\n        padding: 20px;\n        position: relative;\n        width: $w;\n        height: $h;\n        transform: scaleX(1) scaleY(1) scaleZ(1);\n        transform-origin: 50% 50% 0;\n    }\n}\n\n@mixin s-stale($a: 0.5) {\n    color: rgba($colorTelemFresh, $a) !important;\n    font-style: italic;\n}\n","/*****************************************************************************\n * Open MCT, Copyright (c) 2014-2016, United States Government\n * as represented by the Administrator of the National Aeronautics and Space\n * Administration. All rights reserved.\n *\n * Open MCT is licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n *\n * Open MCT includes source code licensed under additional open source\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\n * this source code distribution or the Licensing information page available\n * at runtime from the About dialog for additional information.\n *****************************************************************************/\n\n/* REQUIRES /platform/commonUI/general/res/sass/_constants.scss */\n\n/************************** MOBILE REPRESENTATION ITEMS DIMENSIONS */\n$mobileListIconSize: 30px;\n$mobileTitleDescH: 35px;\n$mobileOverlayMargin: 20px;\n$phoneItemH: floor($ueBrowseGridItemLg/4);\n$tabletItemH: floor($ueBrowseGridItemLg/3);\n\n/************************** MOBILE TREE MENU DIMENSIONS */\n$mobileTreeItemH: 35px;\n$mobileTreeItemIndent: 15px;\n$mobileTreeRightArrowW: 30px;\n\n/************************** DEVICE WIDTHS */\n// IMPORTANT! Usage assumes that ranges are mutually exclusive and have no gaps\n$phoMaxW: 767px;\n$tabMinW: 768px;\n$tabMaxW: 1024px;\n$desktopMinW: 1025px;\n\n/************************** MEDIA QUERIES: WINDOW CHECKS FOR SPECIFIC ORIENTATIONS FOR EACH DEVICE */\n$screenPortrait: \"(orientation: portrait)\";\n$screenLandscape: \"(orientation: landscape)\";\n\n//$mobileDevice: \"(max-device-width: #{$tabMaxW})\";\n\n$phoneCheck: \"(max-device-width: #{$phoMaxW})\";\n$tabletCheck: \"(min-device-width: #{$tabMinW}) and (max-device-width: #{$tabMaxW})\";\n$desktopCheck: \"(min-device-width: #{$desktopMinW}) and (-webkit-min-device-pixel-ratio: 1)\";\n\n/************************** MEDIA QUERIES: WINDOWS FOR SPECIFIC ORIENTATIONS FOR EACH DEVICE */\n$phonePortrait: \"only screen and #{$screenPortrait} and #{$phoneCheck}\";\n$phoneLandscape: \"only screen and #{$screenLandscape} and #{$phoneCheck}\";\n\n$tabletPortrait: \"only screen and #{$screenPortrait} and #{$tabletCheck}\";\n$tabletLandscape: \"only screen and #{$screenLandscape} and #{$tabletCheck}\";\n\n$desktop: \"only screen and #{$desktopCheck}\";\n\n/************************** DEVICE PARAMETERS FOR MENUS/REPRESENTATIONS */\n$proporMenuOnly: 90%;\n$proporMenuWithView: 40%;\n","/*****************************************************************************\n * Open MCT, Copyright (c) 2014-2016, United States Government\n * as represented by the Administrator of the National Aeronautics and Space\n * Administration. All rights reserved.\n *\n * Open MCT is licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n *\n * Open MCT includes source code licensed under additional open source\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\n * this source code distribution or the Licensing information page available\n * at runtime from the About dialog for additional information.\n *****************************************************************************/\n\n/* REQUIRES /platform/commonUI/general/res/sass/mobile/_constants.scss */\n\n// Phones in any orientation\n@mixin phone {\n    @media #{$phonePortrait},\n           #{$phoneLandscape} {\n        @content\n    }\n}\n\n//Phones in portrait orientation\n@mixin phonePortrait {\n    @media #{$phonePortrait} {\n        @content\n    }\n}\n\n// Phones in landscape orientation\n@mixin phoneLandscape {\n    @media #{$phoneLandscape} {\n        @content\n    }\n}\n\n// Tablets in any orientation\n@mixin tablet {\n    @media #{$tabletPortrait},\n           #{$tabletLandscape} {\n        @content\n    }\n}\n\n// Tablets in portrait orientation\n@mixin tabletPortrait {\n    @media #{$tabletPortrait} {\n        @content\n    }\n}\n\n// Tablets in landscape orientation\n@mixin tabletLandscape {\n    @media #{$tabletLandscape} {\n        @content\n    }\n}\n\n// Phones and tablets in any orientation\n@mixin phoneandtablet {\n    @media #{$phonePortrait},\n           #{$phoneLandscape},\n           #{$tabletPortrait},\n           #{$tabletLandscape} {\n        @content\n    }\n}\n\n// Desktop monitors in any orientation\n@mixin desktopandtablet {\n    // Keeping only for legacy - should not be used moving forward\n    // Use body.desktop, body.tablet instead.\n    @media #{$tabletPortrait},\n           #{$tabletLandscape},\n           #{$desktop} {\n        @content\n    }\n}\n\n// Desktop monitors in any orientation\n@mixin desktop {\n    // Keeping only for legacy - should not be used moving forward\n    // Use body.desktop instead.\n    @media #{$desktop} {\n        @content\n    }\n}\n\n// Transition used for the slide menu\n@mixin slMenuTransitions {\n    @include transition-duration(.35s);\n    transition-timing-function: ease;\n    backface-visibility: hidden;\n}\n","// Global\n$colorBodyBg: #333;\n$colorBodyFg: #999;\n$colorGenBg: #222;\n$colorStatusBarBg: #000;\n$colorKey: #0099cc;\n$colorKeySelectedBg: #005177;\n$colorKeyFg: #fff;\n$colorKeyHov: #00c0f6;\n$colorEditAreaBg: #31363e;\n$colorEditAreaFg: #587ab5;\n$colorInteriorBorder: rgba($colorBodyFg, 0.1);\n$colorA: #ccc;\n$colorAHov: #fff;\n$contrastRatioPercent: 7%;\n$hoverRatioPercent: 10%;\n$basicCr: 3px;\n$controlCr: 2px;\n$smallCr: 2px;\n\n// Buttons and Controls\n$colorBtnBg: pullForward($colorBodyBg, $contrastRatioPercent);\n$colorBtnBgHov: pullForward($colorBtnBg, $hoverRatioPercent);\n$colorBtnFg: $colorBodyFg;\n$colorBtnFgHov: pullForward($colorBtnFg, $hoverRatioPercent);\n$colorBtnIcon: $colorBtnFg;\n$colorBtnIconHov: $colorBtnFgHov;\n$colorBtnMajorBg: $colorKey;\n$colorBtnMajorBgHov: pullForward($colorBtnMajorBg, $hoverRatioPercent);\n$colorBtnMajorFg: $colorKeyFg;\n$colorBtnMajorFgHov: pullForward($colorBtnMajorFg, $hoverRatioPercent);\n$colorClickIcon: $colorKey;\n$colorClickIconHov: $colorKeyHov;\n$colorToggleIcon: rgba($colorBodyFg, 0.5);\n$colorToggleIconActive: $colorKey;\n$colorToggleIconHov: rgba($colorToggleIconActive, 0.5);\n$colorInvokeMenu: #fff;\n$contrastInvokeMenuPercent: 30%;\n$shdwBtns: rgba(black, 0.2) 0 1px 2px;\n$shdwBtnsOverlay: rgba(black, 0.5) 0 1px 5px;\n$sliderColorBase: $colorKey;\n$sliderColorRangeHolder: rgba(black, 0.1);\n$sliderColorRange: rgba($sliderColorBase, 0.3);\n$sliderColorRangeHov: rgba($sliderColorBase, 0.5);\n$sliderColorKnob: $sliderColorBase;\n$sliderColorKnobHov: pullForward($sliderColorKnob, $ltGamma);\n$sliderColorRangeValHovBg: rgba($sliderColorBase, 0.1);\n$sliderColorRangeValHovFg: $colorKeyFg;\n$sliderKnobW: 15px;\n$sliderKnobR: 2px;\n$timeControllerToiLineColor: #00c2ff;\n$timeControllerToiLineColorHov: #fff;\n\n// General Colors\n$colorAlt1: #ffc700;\n$colorAlert: #ff3c00;\n$colorIconLink: #49dedb;\n$colorPausedBg: #c56f01;\n$colorPausedFg: #fff;\n$colorCreateBtn: $colorKey;\n$colorGridLines: rgba(#fff, 0.05);\n$colorInvokeMenu: #fff;\n$colorObjHdrTxt: $colorBodyFg;\n$colorObjHdrIc: pullForward($colorObjHdrTxt, 20%);\n$colorTick: rgba(white, 0.2);\n$colorSelectableSelectedPrimary: $colorKey;\n$colorSelectableSelectedSecondary: pushBack($colorSelectableSelectedPrimary, 20%);\n$colorSelectableHov: $colorSelectableSelectedSecondary;\n\n// Menu colors\n$colorMenuBg: pullForward($colorBodyBg, 23%);\n$colorMenuFg: pullForward($colorMenuBg, 70%);\n$colorMenuIc: pullForward($colorKey, 17%);\n$colorMenuHovBg: pullForward($colorMenuBg, $hoverRatioPercent);\n$colorMenuHovFg: #fff;\n$colorMenuHovIc: $colorMenuHovFg;\n$shdwMenu: none;\n$shdwMenuText: rgba(black, 0.1) 0 1px 2px;\n$colorCreateMenuLgIcon: $colorMenuFg;\n$colorCreateMenuText: $colorMenuFg;\n\n// Form colors\n$colorCheck: $colorKey;\n$colorFormRequired: $colorAlt1;\n$colorFormValid: #33cc33;\n$colorFormError: #990000;\n$colorFormInvalid: #ff3300;\n$colorFormFieldErrorBg: $colorFormError;\n$colorFormFieldErrorFg: rgba(#fff, 0.6);\n$colorFormLines: rgba(#fff, 0.1);\n$colorFormSectionHeader: rgba(#fff, 0.1);\n$colorInputBg: rgba(#000, 0.1);\n$colorInputFg: pullForward($colorBodyFg, 20%);\n$colorFormText: rgba(#fff, 0.5);\n$colorInputIcon: pushBack($colorBodyFg, 15%);\n$colorFieldHint: pullForward($colorBodyFg, 20%);\n\n// Inspector\n$colorInspectorBg: pullForward($colorBodyBg, 3%);\n$colorInspectorFg: $colorBodyFg;\n$colorInspectorPropName: pushBack($colorBodyFg, 15%);\n$colorInspectorPropVal: pullForward($colorInspectorFg, 15%);\n$colorInspectorSectionHeaderBg: $colorFormSectionHeader;\n$colorInspectorSectionHeaderFg: pullForward($colorInspectorBg, 40%);\n\n// Status colors, mainly used for messaging and item ancillary symbols\n$colorStatusFg: #ccc;\n$colorStatusDefault: #ccc;\n$colorStatusInfo: #62ba72;\n$colorStatusAlert: #ffa66d;\n$colorStatusError: #d4585c;\n$colorStatusAvailable: $colorKey;\n$colorStatusBtnBg: $colorBtnBg;\n$colorProgressBarOuter: rgba(#000, 0.1);\n$colorProgressBarAmt: $colorKey;\n$progressBarHOverlay: 15px;\n$progressBarStripeW: 20px;\n$shdwStatusIc: rgba(black, 0.4) 0 1px 2px;\n$animPausedPulseDur: 500ms;\n\n// Selects\n$colorSelectBg: $colorBtnBg;\n$colorSelectFg: $colorBtnFg;\n\n// Limits and staleness colors\n$colorTelemFresh: pullForward($colorBodyFg, 20%);\n$colorTelemStale: pushBack($colorBodyFg, 20%);\n$styleTelemStale: italic;\n$colorLimitYellowBg: rgba(#ffaa00, 0.3);\n$colorLimitYellowIc: #ffaa00;\n$colorLimitRedBg: rgba(red, 0.3);\n$colorLimitRedIc: red;\n\n// Bubble colors\n$colorInfoBubbleBg: #ddd;\n$colorInfoBubbleFg: #666;\n$colorThumbsBubbleFg: pullForward($colorBodyFg, 10%);\n$colorThumbsBubbleBg: pullForward($colorBodyBg, 10%);\n\n// Overlay\n$colorOvrBlocker: rgba(black, 0.7);\n$colorOvrBg: pullForward($colorBodyBg, 10%);\n$colorOvrFg: pullForward($colorBodyFg, 30%);\n$colorOvrBtnBg: pullForward($colorOvrBg, 20%);\n$colorOvrBtnFg: #fff;\n$colorFieldHintOverlay: pullForward($colorOvrBg, 30%);\n\n// Items\n$colorItemBg: lighten($colorBodyBg, 5%);\n$colorItemBgHov: pullForward($colorItemBg, $hoverRatioPercent);\n$colorItemFg: lighten($colorItemBg, 50%);\n$colorItemFgDetails: lighten($colorItemBg, 30%);\n$colorItemIc: $colorKey;\n$colorItemSubIcons: $colorItemFgDetails;\n$colorItemOpenIcon: $colorItemFgDetails;\n$shdwItemText: rgba(black, 0.1) 0 1px 2px;\n$colorItemBgSelected: $colorKey;\n\n// Tabular\n$colorTabBorder: pullForward($colorBodyBg, 10%);\n$colorTabBodyBg: darken($colorBodyBg, 10%);\n$colorTabBodyFg: lighten($colorTabBodyBg, 40%);\n$colorTabHeaderBg: rgba(white, 0.1); // lighten($colorBodyBg, 10%);\n$colorTabHeaderFg: $colorBodyFg; //lighten($colorTabHeaderBg, 40%);\n$colorTabHeaderBorder: $colorBodyBg;\n\n// Plot\n$colorPlotBg: rgba(black, 0.1);\n$colorPlotFg: $colorBodyFg;\n$colorPlotHash: $colorTick;\n$stylePlotHash: dashed;\n$colorPlotAreaBorder: $colorInteriorBorder;\n$colorPlotLabelFg: pushBack($colorPlotFg, 20%);\n\n// Tree\n$colorItemTreeHoverBg: pullForward($colorBodyBg, $hoverRatioPercent);\n$colorItemTreeHoverFg: pullForward($colorBodyFg, $hoverRatioPercent);\n$colorItemTreeIcon: $colorKey;\n$colorItemTreeIconHover: lighten($colorItemTreeIcon, 20%);\n$colorItemTreeFg: $colorBodyFg;\n$colorItemTreeSelectedBg: pushBack($colorKey, 15%);\n$colorItemTreeSelectedFg: pullForward($colorBodyFg, 20%);\n$colorItemTreeEditingBg: #344154;\n$colorItemTreeEditingFg: $colorEditAreaFg;\n$colorItemTreeVC: $colorBodyFg;\n$colorItemTreeVCHover: pullForward($colorItemTreeVC, 20%);\n$colorItemTreeSelectedVC: $colorItemTreeVC;\n$shdwItemTreeIcon: 0.6;\n\n// Scrollbar\n$scrollbarTrackSize: 10px;\n$scrollbarTrackShdw: rgba(#000, 0.7) 0 1px 5px;\n$scrollbarTrackColorBg: rgba(#000, 0.4);\n$scrollbarThumbColor: pullForward($colorBodyBg, 10%);\n$scrollbarThumbColorHov: pullForward($scrollbarThumbColor, 2%);\n$scrollbarThumbColorOverlay: pullForward($colorOvrBg, 10%);\n$scrollbarThumbColorOverlayHov: pullForward($scrollbarThumbColorOverlay, 2%);\n\n// Splitter\n// All splitterD* values MUST both be either odd or even numbers\n$splitterD: 20px;\n$splitterDSm: 10px; // Smaller splitter, used inside elements like a Timeline view\n$splitterHandleD: 2px;\n$colorSplitterBaseBg: pullForward($colorBodyBg, 10%);\n$colorSplitterBg: $colorSplitterBaseBg;\n$splitterShdw: rgba(black, 0.4) 0 0 3px;\n$splitterEndCr: none;\n$colorSplitterHover: pullForward($colorSplitterBg, $hoverRatioPercent);\n$colorSplitterActive: $colorKey;\n\n// Minitabs\n$uePaneMiniTabH: 24px;\n$uePaneMiniTabW: 8px;\n$colorMiniTabBg: $colorSplitterBg;\n$colorMiniTabFg: pushBack($colorMiniTabBg, 10%);\n$colorMiniTabBgHov: $colorSplitterHover;\n$colorMiniTabFgHov: #fff;\n\n// Mobile\n$colorMobilePaneLeft: darken($colorBodyBg, 5%);\n$colorMobilePaneLeftTreeItemBg: pullForward($colorMobilePaneLeft, 3%);\n$colorMobileSelectListTreeItemBg: rgba(#fff, 0.05);\n\n// Datetime Picker\n$colorCalCellHovBg: $colorKey;\n$colorCalCellHovFg: $colorKeyFg;\n$colorCalCellSelectedBg: $colorItemTreeSelectedBg;\n$colorCalCellSelectedFg: $colorItemTreeSelectedFg;\n$colorCalCellInMonthBg: pushBack($colorMenuBg, 5%);\n\n// About Screen\n$colorAboutLink: #84b3ff;\n\n// Loading\n$colorLoadingFg: $colorAlt1;\n$colorLoadingBg: rgba($colorBodyFg, 0.2);","@mixin containerSubtle($bg: $colorBodyBg, $fg: $colorBodyFg, $gradRatio: 5%) {\n\t@include containerBase($bg, $fg);\n\t@include background-image(linear-gradient(pullForward($bg, $gradRatio), $bg));\n\t@include boxShdw($shdwBtns);\n}\n\n@function pullForward($c: $colorBodyBg, $p: 20%) {\n    // For dark interfaces, lighter things come forward - opposite for light interfaces\n    @return lighten($c, $p);\n}\n\n@function pushBack($c: $colorBodyBg, $p: 20%) {\n    // For dark interfaces, darker things move back - opposite for light interfaces\n    @return darken($c, $p);\n}","@mixin glyph($unicode, $family: 'symbolsfont') {\n    &:before {\n        content: $unicode;\n        font-family: $family;\n    }\n}\n\n/************************** CHAR UNICODES */\n\n$glyph-icon-alert-rect: '\\e900';\n$glyph-icon-alert-triangle: '\\e901';\n$glyph-icon-arrow-down: '\\e902';\n$glyph-icon-arrow-left: '\\e903';\n$glyph-icon-arrow-right: '\\e904';\n$glyph-icon-arrow-double-up: '\\e905';\n$glyph-icon-arrow-tall-up: '\\e906';\n$glyph-icon-arrow-tall-down: '\\e907';\n$glyph-icon-arrow-double-down: '\\e908';\n$glyph-icon-arrow-up: '\\e909';\n$glyph-icon-asterisk: '\\e910';\n$glyph-icon-bell: '\\e911';\n$glyph-icon-box: '\\e912';\n$glyph-icon-box-with-arrow: '\\e913';\n$glyph-icon-check: '\\e914';\n$glyph-icon-connectivity: '\\e915';\n$glyph-icon-database-in-brackets: '\\e916';\n$glyph-icon-eye-open: '\\e917';\n$glyph-icon-gear: '\\e918';\n$glyph-icon-hourglass: '\\e919';\n$glyph-icon-info: '\\e920';\n$glyph-icon-link: '\\e921';\n$glyph-icon-lock: '\\e922';\n$glyph-icon-minus: '\\e923';\n$glyph-icon-people: '\\e924';\n$glyph-icon-person: '\\e925';\n$glyph-icon-plus: '\\e926';\n$glyph-icon-trash: '\\e927';\n$glyph-icon-x: '\\e928';\n$glyph-icon-brackets: '\\e929';\n$glyph-icon-arrows-out: '\\e1000';\n$glyph-icon-arrows-right-left: '\\e1001';\n$glyph-icon-arrows-up-down: '\\e1002';\n$glyph-icon-box-with-dashed-lines: '';\n$glyph-icon-bullet: '\\e1004';\n$glyph-icon-calendar: '\\e1005';\n$glyph-icon-chain-links: '\\e1006';\n$glyph-icon-collapse-pane-left: '\\e1007';\n$glyph-icon-collapse-pane-right: '\\e1008';\n$glyph-icon-download: '\\e1009';\n$glyph-icon-duplicate: '\\e1010';\n$glyph-icon-folder-new: '\\e1011';\n$glyph-icon-fullscreen-collapse: '\\e1012';\n$glyph-icon-fullscreen-expand: '\\e1013';\n$glyph-icon-layers: '\\e1014';\n$glyph-icon-line-horz: '\\e1015';\n$glyph-icon-magnify: '\\e1016';\n$glyph-icon-magnify-in: '\\e1017';\n$glyph-icon-magnify-out: '\\e1018';\n$glyph-icon-menu-hamburger: '\\e1019';\n$glyph-icon-move: '\\e1020';\n$glyph-icon-new-window: '\\e1021';\n$glyph-icon-paint-bucket: '\\e1022';\n$glyph-icon-pause: '\\e1023';\n$glyph-icon-pencil: '\\e1024';\n$glyph-icon-play: '\\e1025';\n$glyph-icon-plot-resource: '\\e1026';\n$glyph-icon-pointer-left: '\\e1027';\n$glyph-icon-pointer-right: '\\e1028';\n$glyph-icon-refresh: '\\e1029';\n$glyph-icon-save: '\\e1030';\n$glyph-icon-sine: '\\e1031';\n$glyph-icon-T: '\\e1032';\n$glyph-icon-thumbs-strip: '\\e1033';\n$glyph-icon-two-parts-both: '\\e1034';\n$glyph-icon-two-parts-one-only: '\\e1035';\n$glyph-icon-x-in-circle: '\\e1036';\n$glyph-icon-activity: '\\e1100';\n$glyph-icon-activity-mode: '\\e1101';\n$glyph-icon-autoflow-tabular: '\\e1102';\n$glyph-icon-clock: '\\e1103';\n$glyph-icon-database: '\\e1104';\n$glyph-icon-database-query: '\\e1105';\n$glyph-icon-dataset: '\\e1106';\n$glyph-icon-datatable: '\\e1107';\n$glyph-icon-dictionary: '\\e1108';\n$glyph-icon-folder: '\\e1109';\n$glyph-icon-image: '\\e1110';\n$glyph-icon-layout: '\\e1111';\n$glyph-icon-object: '\\e1112';\n$glyph-icon-object-unknown: '\\e1113';\n$glyph-icon-packet: '\\e1114';\n$glyph-icon-page: '\\e1115';\n$glyph-icon-plot-overlay: '\\e1116';\n$glyph-icon-plot-stacked: '\\e1117';\n$glyph-icon-session: '\\e1118';\n$glyph-icon-tabular: '\\e1119';\n$glyph-icon-tabular-lad: '\\e1120';\n$glyph-icon-tabular-lad-set: '\\e1121';\n$glyph-icon-tabular-realtime: '\\e1122';\n$glyph-icon-tabular-scrolling: '\\e1123';\n$glyph-icon-telemetry: '\\e1124';\n$glyph-icon-telemetry-panel: '\\e1125';\n$glyph-icon-timeline: '\\e1126';\n$glyph-icon-timer: '\\e1127';\n$glyph-icon-topic: '\\e1128';\n$glyph-icon-box-with-dashed-lines: '\\e1129';\n\n/************************** 16 PX CLASSES */\n\n.icon-alert-rect {  @include glyph($glyph-icon-alert-rect); }\n.icon-alert-triangle {  @include glyph($glyph-icon-alert-triangle); }\n.icon-arrow-down {  @include glyph($glyph-icon-arrow-down); }\n.icon-arrow-left {  @include glyph($glyph-icon-arrow-left); }\n.icon-arrow-right {  @include glyph($glyph-icon-arrow-right); }\n.icon-arrow-double-up {  @include glyph($glyph-icon-arrow-double-up); }\n.icon-arrow-tall-up {  @include glyph($glyph-icon-arrow-tall-up); }\n.icon-arrow-tall-down {  @include glyph($glyph-icon-arrow-tall-down); }\n.icon-arrow-double-down {  @include glyph($glyph-icon-arrow-double-down); }\n.icon-arrow-up {  @include glyph($glyph-icon-arrow-up); }\n.icon-asterisk {  @include glyph($glyph-icon-asterisk); }\n.icon-bell {  @include glyph($glyph-icon-bell); }\n.icon-box {  @include glyph($glyph-icon-box); }\n.icon-box-with-arrow {  @include glyph($glyph-icon-box-with-arrow); }\n.icon-check {  @include glyph($glyph-icon-check); }\n.icon-connectivity {  @include glyph($glyph-icon-connectivity); }\n.icon-database-in-brackets {  @include glyph($glyph-icon-database-in-brackets); }\n.icon-eye-open {  @include glyph($glyph-icon-eye-open); }\n.icon-gear {  @include glyph($glyph-icon-gear); }\n.icon-hourglass {  @include glyph($glyph-icon-hourglass); }\n.icon-info {  @include glyph($glyph-icon-info); }\n.icon-link {  @include glyph($glyph-icon-link); }\n.icon-lock {  @include glyph($glyph-icon-lock); }\n.icon-minus {  @include glyph($glyph-icon-minus); }\n.icon-people {  @include glyph($glyph-icon-people); }\n.icon-person {  @include glyph($glyph-icon-person); }\n.icon-plus {  @include glyph($glyph-icon-plus); }\n.icon-trash {  @include glyph($glyph-icon-trash); }\n.icon-x {  @include glyph($glyph-icon-x); }\n.icon-brackets {  @include glyph($glyph-icon-brackets); }\n.icon-arrows-out {  @include glyph($glyph-icon-arrows-out); }\n.icon-arrows-right-left {  @include glyph($glyph-icon-arrows-right-left); }\n.icon-arrows-up-down {  @include glyph($glyph-icon-arrows-up-down); }\n.icon-bullet {  @include glyph($glyph-icon-bullet); }\n.icon-calendar {  @include glyph($glyph-icon-calendar); }\n.icon-chain-links {  @include glyph($glyph-icon-chain-links); }\n.icon-collapse-pane-left {  @include glyph($glyph-icon-collapse-pane-left); }\n.icon-collapse-pane-right {  @include glyph($glyph-icon-collapse-pane-right); }\n.icon-download {  @include glyph($glyph-icon-download); }\n.icon-duplicate {  @include glyph($glyph-icon-duplicate); }\n.icon-folder-new {  @include glyph($glyph-icon-folder-new); }\n.icon-fullscreen-collapse {  @include glyph($glyph-icon-fullscreen-collapse); }\n.icon-fullscreen-expand {  @include glyph($glyph-icon-fullscreen-expand); }\n.icon-layers {  @include glyph($glyph-icon-layers); }\n.icon-line-horz {  @include glyph($glyph-icon-line-horz); }\n.icon-magnify {  @include glyph($glyph-icon-magnify); }\n.icon-magnify-in {  @include glyph($glyph-icon-magnify-in); }\n.icon-magnify-out {  @include glyph($glyph-icon-magnify-out); }\n.icon-menu-hamburger {  @include glyph($glyph-icon-menu-hamburger); }\n.icon-move {  @include glyph($glyph-icon-move); }\n.icon-new-window {  @include glyph($glyph-icon-new-window); }\n.icon-paint-bucket {  @include glyph($glyph-icon-paint-bucket); }\n.icon-pause {  @include glyph($glyph-icon-pause); }\n.icon-pencil {  @include glyph($glyph-icon-pencil); }\n.icon-play {  @include glyph($glyph-icon-play); }\n.icon-plot-resource {  @include glyph($glyph-icon-plot-resource); }\n.icon-pointer-left {  @include glyph($glyph-icon-pointer-left); }\n.icon-pointer-right {  @include glyph($glyph-icon-pointer-right); }\n.icon-refresh {  @include glyph($glyph-icon-refresh); }\n.icon-save {  @include glyph($glyph-icon-save); }\n.icon-sine {  @include glyph($glyph-icon-sine); }\n.icon-T {  @include glyph($glyph-icon-T); }\n.icon-thumbs-strip {  @include glyph($glyph-icon-thumbs-strip); }\n.icon-two-parts-both {  @include glyph($glyph-icon-two-parts-both); }\n.icon-two-parts-one-only {  @include glyph($glyph-icon-two-parts-one-only); }\n.icon-x-in-circle {  @include glyph($glyph-icon-x-in-circle); }\n.icon-activity {  @include glyph($glyph-icon-activity); }\n.icon-activity-mode {  @include glyph($glyph-icon-activity-mode); }\n.icon-autoflow-tabular {  @include glyph($glyph-icon-autoflow-tabular); }\n.icon-clock {  @include glyph($glyph-icon-clock); }\n.icon-database {  @include glyph($glyph-icon-database); }\n.icon-database-query {  @include glyph($glyph-icon-database-query); }\n.icon-dataset {  @include glyph($glyph-icon-dataset); }\n.icon-datatable {  @include glyph($glyph-icon-datatable); }\n.icon-dictionary {  @include glyph($glyph-icon-dictionary); }\n.icon-folder {  @include glyph($glyph-icon-folder); }\n.icon-image {  @include glyph($glyph-icon-image); }\n.icon-layout {  @include glyph($glyph-icon-layout); }\n.icon-object {  @include glyph($glyph-icon-object); }\n.icon-object-unknown {  @include glyph($glyph-icon-object-unknown); }\n.icon-packet {  @include glyph($glyph-icon-packet); }\n.icon-page {  @include glyph($glyph-icon-page); }\n.icon-plot-overlay {  @include glyph($glyph-icon-plot-overlay); }\n.icon-plot-stacked {  @include glyph($glyph-icon-plot-stacked); }\n.icon-session {  @include glyph($glyph-icon-session); }\n.icon-tabular {  @include glyph($glyph-icon-tabular); }\n.icon-tabular-lad {  @include glyph($glyph-icon-tabular-lad); }\n.icon-tabular-lad-set {  @include glyph($glyph-icon-tabular-lad-set); }\n.icon-tabular-realtime {  @include glyph($glyph-icon-tabular-realtime); }\n.icon-tabular-scrolling {  @include glyph($glyph-icon-tabular-scrolling); }\n.icon-telemetry {  @include glyph($glyph-icon-telemetry); }\n.icon-telemetry-panel {  @include glyph($glyph-icon-telemetry-panel); }\n.icon-timeline {  @include glyph($glyph-icon-timeline); }\n.icon-timer {  @include glyph($glyph-icon-timer); }\n.icon-topic {  @include glyph($glyph-icon-topic); }\n.icon-box-with-dashed-lines {  @include glyph($glyph-icon-box-with-dashed-lines); }\n\n/************************** 12 PX CLASSES */\n\n.icon-eye-open-12px {  @include glyph($glyph-icon-eye-open,'symbolsfont-12px'); }\n.icon-collapse-pane-left-12px {  @include glyph($glyph-icon-collapse-pane-left,'symbolsfont-12px'); }\n.icon-collapse-pane-right-12px {  @include glyph($glyph-icon-collapse-pane-right,'symbolsfont-12px'); }\n.icon-folder-12px {  @include glyph($glyph-icon-folder,'symbolsfont-12px'); }","/*****************************************************************************\n * Open MCT, Copyright (c) 2014-2016, United States Government\n * as represented by the Administrator of the National Aeronautics and Space\n * Administration. All rights reserved.\n *\n * Open MCT is licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n *\n * Open MCT includes source code licensed under additional open source\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\n * this source code distribution or the Licensing information page available\n * at runtime from the About dialog for additional information.\n *****************************************************************************/\n.triangle {\n\t$myColor: $colorKey;\n\t$mySize: 10px;\n\t@include triangle-right($mySize, $myColor);\n\t&.triangle-down {\n\t\t@include triangle-down($mySize, $myColor);\n\t}\n}\n\n.ui-symbol {\n    font-family: 'symbolsfont';\n    -webkit-font-smoothing: antialiased;\n}\n\n.ui-symbol.icon {\n    color: $colorKey;\n    font-size: inherit;\n    &.alert {\n        color: $colorAlert;\n        &:hover {\n            color: lighten($colorAlert, $ltGamma);\n        }\n    }\n}\n\n.bar .ui-symbol {\n\tdisplay: inline-block;\n}\n\n.invoke-menu {\n\ttext-shadow: none;\n\tdisplay: inline-block;\n}\n\n.s-menu-button .invoke-menu,\n.icon.major .invoke-menu {\n\tmargin-left: $interiorMarginSm;\n}\n\n.menu .type-icon,\n.tree-item .type-icon,\n.super-menu.menu .menu-item-a:before {\n\tposition: absolute;\n}\n\n.t-item-icon {\n\t// Used in grid-item.html, tree-item, inspector location\n\t@extend .ui-symbol;\n    @extend .icon;\n    line-height: inherit;\n    position: relative;\n    &.l-icon-link {\n        &:after {\n            color: $colorIconLink;\n            content: $glyph-icon-link;\n            height: auto; width: auto;\n            position: absolute;\n            left: 0; top: 0; right: 0; bottom: 20%;\n            @include transform-origin(bottom left);\n            @include transform(scale(0.3));\n            z-index: 2;\n        }\n\n/*        .t-item-icon-glyph {\n            &:after {\n                color: $colorIconLink;\n                content: '\\e921'; //$glyph-icon-link;\n                height: auto; width: auto;\n                position: absolute;\n                left: 0; top: 0; right: 0; bottom: 20%;\n                @include transform-origin(bottom left);\n                @include transform(scale(0.3));\n                z-index: 2;\n            }\n        }*/\n    }\n}\n","$ueTimeConductorH: (25px, 3px, 20px);\n$timeCondInputTimeSysDefW: 165px; // Default width for datetime value inputs\n$timeCondInputDeltaDefW: 60px; // Default width for delta value inputs, typically 00:00:00","/*****************************************************************************\n * Open MCT, Copyright (c) 2014-2015, United States Government\n * as represented by the Administrator of the National Aeronautics and Space\n * Administration. All rights reserved.\n *\n * Open MCT is licensed under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n *\n * Open MCT includes source code licensed under additional open source\n * licenses. See the Open Source Licenses file (LICENSES.md) included with\n * this source code distribution or the Licensing information page available\n * at runtime from the About dialog for additional information.\n *****************************************************************************/\n@mixin toiLineHovEffects() {\n    &:before,\n    &:after {\n        background-color: $timeControllerToiLineColorHov;\n    }\n}\n\n.l-time-conductor-holder {\n    border-top: 1px solid $colorInteriorBorder;\n    min-width: 500px;\n    padding-top: $interiorMargin;\n}\n\n.time-conductor-icon {\n    $c: $colorObjHdrIc;\n    $d: 18px;\n    height: $d !important;\n    width: $d;\n    position: relative;\n\n    &:before {\n        @extend .ui-symbol;\n        color: $c;\n        content: $glyph-icon-brackets;\n        font-size: $d;\n        line-height: normal;\n        display: block;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n    }\n\n    // Clock hands\n    div[class*=\"hand\"] {\n        $handW: 2px;\n        $handH: $d * 0.4; //8px;\n        @include transform(translate(-50%, -50%));\n        @include animation-iteration-count(infinite);\n        @include animation-timing-function(linear);\n        position: absolute;\n        height: $handW;\n        width: $handW;\n        left: 50%;\n        top: 50%;\n        z-index: 2;\n        &:before {\n            background: $colorObjHdrIc;\n            content: '';\n            display: block;\n            position: absolute;\n            width: 100%;\n            bottom: -1px;\n        }\n        &.hand-little {\n            z-index: 2;\n            @include animation-duration(12s);\n            &:before {\n                height: ceil($handH * 0.7);\n            }\n        }\n        &.hand-big {\n            z-index: 1;\n            @include animation-duration(1s);\n            &:before {\n                height: $handH;\n            }\n        }\n    }\n}\n\n.l-time-conductor {\n    $knobHOffset: 0px;\n    $rangeValPad: $interiorMargin;\n    $rangeValOffset: $sliderKnobW + $interiorMargin;\n    $r1H: nth($ueTimeConductorH, 1);\n    $r2H: nth($ueTimeConductorH, 2);\n    $r3H: nth($ueTimeConductorH, 3);\n    position: relative;\n\n    > .l-row-elem {\n        // First order row elements\n        box-sizing: border-box;\n        width: 100%;\n        position: relative;\n    }\n\n    .mode-selector .s-menu-button,\n    .time-delta {\n        &:before {\n            @extend .ui-symbol;\n        }\n    }\n\n    .time-delta {\n        &:before {\n            color: $colorTimeCondKeyBg;\n        }\n    }\n\n    .l-time-conductor-inputs-holder,\n    .l-time-conductor-inputs-and-ticks,\n    .l-time-conductor-zoom-w {\n        font-size: 0.8rem;\n    }\n\n    .l-time-conductor-inputs-holder {\n        $ticksBlockerFadeW: 50px;\n        $iconCalendarW: 16px;\n        $wBgColor: $colorBodyBg;\n\n        height: $r1H;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        .l-time-range-w {\n            // Wraps a datetime text input field\n            height: 100%;\n            position: absolute;\n            .title {\n                display: inline-block;\n                margin-right: $interiorMarginSm;\n            }\n            &.start-w {\n                @include background-image(linear-gradient(270deg, transparent, $wBgColor $ticksBlockerFadeW));\n                padding-right: $ticksBlockerFadeW;\n                .title:before {\n                    content: 'Start';\n                }\n            }\n            &.end-w {\n                @include background-image(linear-gradient(90deg, transparent, $wBgColor $ticksBlockerFadeW));\n                padding-left: $ticksBlockerFadeW;\n                right: 0;\n                .title:before {\n                    content: 'End';\n                }\n            }\n            .l-time-conductor-inputs {\n                pointer-events: auto;\n            }\n            input[type=\"text\"] {\n                @include trans-prop-nice(padding, 250ms);\n            }\n            .time-range-input input[type=\"text\"] {\n                width: $timeCondInputTimeSysDefW;\n            }\n            .hrs-min-input input[type=\"text\"] {\n                width: $timeCondInputDeltaDefW;\n            }\n            .icon-calendar {\n                margin-top: 4px;\n            }\n        }\n    }\n\n    .l-time-conductor-inputs-and-ticks {\n        $c: $colorTimeCondTicks; //$colorTick;\n        height: $r1H;\n        mct-conductor-axis {\n            display: block;\n            position: relative;\n            width: 100%;\n        }\n        .l-axis-holder {\n            height: $r1H;\n            position: relative;\n            width: 100%;\n            svg {\n                text-rendering: geometricPrecision;\n                width: 100%;\n                height: 100%;\n                > g {\n                    font-size: 0.9em;\n                }\n                path {\n                    // Line beneath ticks\n                    display: none;\n                }\n                line {\n                    // Tick marks\n                    stroke: $c;\n                }\n                text {\n                    // Tick labels\n                    fill: $c;\n                }\n            }\n        }\n    }\n    .l-data-visualization {\n        background: $colorTimeCondDataVisBg;\n        height: $r2H;\n    }\n\n    .l-time-conductor-controls {\n        align-items: center;\n        margin-top: $interiorMargin;\n        .l-time-conductor-zoom-w {\n            @include justify-content(flex-end);\n            .time-conductor-zoom {\n                //display: none; // TEMP per request from Andrew 8/1/16\n                height: $r3H;\n                min-width: 100px;\n                width: 20%;\n            }\n            .time-conductor-zoom-current-range {\n                //display: none; // TEMP per request from Andrew 8/1/16\n                color: $colorTick;\n            }\n        }\n    }\n\n    // Real-time, latest modes\n    &.realtime-mode,\n    &.lad-mode {\n        .time-conductor-icon {\n            &:before { color: $colorTimeCondKeyBg; }\n            div[class*=\"hand\"] {\n                @include animation-name(clock-hands);\n                &:before {\n                    background: $colorTimeCondKeyBg;\n                }\n            }\n        }\n\n        .l-time-conductor-inputs-holder {\n            .l-time-range-input-w {\n                input[type=\"text\"]:not(.error) {\n                    background: transparent;\n                    box-shadow: none;\n                    border-radius: 0;\n                    padding-left: 0;\n                    padding-right: 0;\n                    &:hover,\n                    &:focus {\n                        @include nice-input();\n                        padding: $inputTextP;\n                    }\n                }\n                .icon-calendar {\n                    display: none;\n                }\n                &.start-date {\n                    display: none;\n                }\n                &.end-date {\n                    pointer-events: none;\n                    input[type=\"text\"] {\n                        color: pullForward($colorTimeCondKeyBg, 5%);\n                        margin-right: $interiorMargin;\n                        tab-index: -1;\n                    }\n                }\n            }\n        }\n\n        .l-data-visualization {\n            background: $colorTimeCondDataVisRtBg !important\n        }\n\n        .mode-selector .s-menu-button {\n            $fg: $colorTimeCondKeyFg;\n            @include btnSubtle($bg: $colorTimeCondKeyBg, $bgHov: pullForward($colorTimeCondKeyBg, $ltGamma), $fg: $colorTimeCondKeyFg);\n            &:before { color: $fg !important; };\n            color: $fg !important;\n        }\n    }\n\n    // Fixed mode\n    &.fixed-mode {\n        $i: $glyph-icon-calendar;\n        .time-conductor-icon div[class*=\"hand\"] {\n            &.hand-little {\n                @include transform(rotate(120deg));\n            }\n        }\n        .mode-selector .s-menu-button:before {\n            content: $i;\n        }\n    }\n\n    // Realtime mode\n    &.realtime-mode {\n        $i: $glyph-icon-clock;\n        .time-conductor-icon div[class*=\"hand\"] {\n            @include animation-name(clock-hands);\n        }\n        .time-delta:before {\n            content: $i;\n        }\n        .l-time-conductor-inputs-holder .l-time-range-w.end-w .title:before {\n            content: 'Now';\n        }\n        .mode-selector .s-menu-button:before {\n            content: $i;\n        }\n    }\n\n    // LAD mode\n    &.lad-mode {\n        $i: $glyph-icon-database;\n        .time-conductor-icon div[class*=\"hand\"] {\n            @include animation-name(clock-hands-sticky);\n            &.hand-big {\n                @include animation-duration(5s);\n            }\n            &.hand-little {\n                @include animation-duration(60s);\n            }\n        }\n        .time-delta:before {\n            content: $i;\n        }\n        .l-time-conductor-inputs-holder .l-time-range-w.end-w .title:before {\n            content: 'LAD';\n        }\n        .mode-selector .s-menu-button:before {\n            content: $i;\n        }\n    }\n}\n\n/******************************************************************** MOBILE */\n\n@include phoneandtablet {\n    .l-time-conductor-holder { min-width: 0 !important; }\n    .super-menu.mini {\n        width: 200px;\n        height: 100px;\n        .pane.menu-item-description {\n            display: none;\n        }\n    }\n}\n\n@include phone {\n    .l-time-conductor {\n        min-width: 0;\n        .l-time-conductor-inputs-and-ticks {\n            .l-time-conductor-inputs-holder {\n                .l-time-range-w {\n                    background-image: none !important;\n                }\n            }\n            mct-conductor-axis {\n                display: none;\n            }\n        }\n    }\n}\n\n@include phonePortrait {\n    .l-time-conductor {\n        .l-data-visualization,\n        .l-time-conductor-zoom-w,\n        .time-delta {\n            display: none;\n        }\n\n        .l-time-conductor-inputs-and-ticks {\n            height: auto !important;\n            .l-time-conductor-inputs-holder {\n                position: relative;\n                height: auto !important;\n\n                .l-time-range-w {\n                    background-image: none !important;\n                    display: block;\n                    height: auto !important;\n                    padding: 0 !important;\n                    position: relative;\n                    text-align: left;\n                    &:not(:first-child) {\n                        margin-top: $interiorMargin;\n                    }\n                }\n            }\n        }\n\n        // Fixed mode\n        &.fixed-mode {\n            .l-time-conductor-inputs-and-ticks {\n                .l-time-range-w {\n                    .title {\n                        width: 30px;\n                    }\n                }\n            }\n        }\n\n        // Real-time, latest modes\n        &.realtime-mode,\n        &.lad-mode {\n            .l-time-conductor-inputs-and-ticks {\n                .l-time-range-w {\n                    &.start-w {\n                        display: none;\n                    }\n                    &.end-w {\n                        margin-top: 0;\n                        .end-date input[type=\"text\"] {\n                            margin: 0;\n                            text-align: left;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"],"mappings":"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","names":[],"sourceRoot":"/source/"}