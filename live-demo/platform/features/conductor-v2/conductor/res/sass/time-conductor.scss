/*****************************************************************************
 * Open MCT Web, Copyright (c) 2014-2015, United States Government
 * as represented by the Administrator of the National Aeronautics and Space
 * Administration. All rights reserved.
 *
 * Open MCT Web is licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * Open MCT Web includes source code licensed under additional open source
 * licenses. See the Open Source Licenses file (LICENSES.md) included with
 * this source code distribution or the Licensing information page available
 * at runtime from the About dialog for additional information.
 *****************************************************************************/
@import "bourbon";
@import "../../../../../commonUI/general/res/sass/constants";
@import "../../../../../commonUI/general/res/sass/mixins";
@import "../../../../../commonUI/general/res/sass/mobile/constants";
@import "../../../../../commonUI/general/res/sass/mobile/mixins";
@import "../../../../../commonUI/themes/espresso/res/sass/constants";
@import "../../../../../commonUI/themes/espresso/res/sass/mixins";
@import "../../../../../commonUI/general/res/sass/icons";
@import "constants";

@mixin toiLineHovEffects() {
    &:before,
    &:after {
        background-color: $timeControllerToiLineColorHov;
    }
}

.l-time-conductor-holder {
    $minW: 500px;
    border-top: 1px solid $colorInteriorBorder;
    min-width: $minW;
    padding-top: $interiorMargin;
}

.time-conductor-icon {
    $c: $colorObjHdrIc;
    $d: 18px;
    height: $d !important;
    width: $d;
    position: relative;

    &:before {
        @extend .ui-symbol;
        color: $c;
        content: '\e624';
        font-size: $d;
        line-height: normal;
        display: block;
        width: 100%;
        height: 100%;
        z-index: 1;
    }

    // Clock hands
    div[class*="hand"] {
        $handW: 2px;
        $handH: $d * 0.4; //8px;
        @include transform(translate(-50%, -50%));
        @include animation-iteration-count(infinite);
        @include animation-timing-function(linear);
        position: absolute;
        height: $handW;
        width: $handW;
        left: 50%;
        top: 50%;
        z-index: 2;
        &:before {
            background-color: $c;
            content: '';
            display: block;
            position: absolute;
            width: 100%;
            bottom: -1px;
        }
        &.hand-little {
            z-index: 2;
            @include animation-duration(12s);
            &:before {
                //background: red;
                height: ceil($handH * 0.7);
            }
        }
        &.hand-big {
            z-index: 1;
            @include animation-duration(1s);
            &:before {
                height: $handH;
            }
        }
    }
}

.l-time-conductor {
    $knobHOffset: 0px;
    $rangeValPad: $interiorMargin;
    $rangeValOffset: $sliderKnobW + $interiorMargin;
    $r1H: nth($ueTimeConductorH, 1);
    $r2H: nth($ueTimeConductorH, 2);
    $r3H: nth($ueTimeConductorH, 3);

    // Glyphs Todo: replace with refactored CSS approach when that is merged into master
    $glyphIconFixed: '\e604';
    $glyphIconRealtime: '\43';
    $glyphIconLatest: '\44';

    position: relative;

    > .l-row-elem {
        // First order row elements
        box-sizing: border-box;
        width: 100%;
        position: relative;
    }

    .mode-selector .s-menu-btn,
    .time-delta {
        &:before {
            @extend .ui-symbol;
        }
    }

    .time-delta {
        &:before {
            color: $colorTimeCondKeyBg;
        }
    }

    .l-time-conductor-inputs-holder,
    .l-time-conductor-inputs-and-ticks,
    .l-time-conductor-zoom-w {
        font-size: 0.8rem;
    }

    .l-time-conductor-inputs-holder {
        $ticksBlockerFadeW: 50px;
        $iconCalendarW: 16px;
        $wBgColor: $colorBodyBg;

        height: $r1H;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1;
        .l-time-range-w {
            // Wraps a datetime text input field
            height: 100%;
            position: absolute;
            .title {
                display: inline-block;
                margin-right: $interiorMarginSm;
            }
            &.start-w {
                @include background-image(linear-gradient(270deg, transparent, $wBgColor $ticksBlockerFadeW));
                padding-right: $ticksBlockerFadeW;
                .title:before {
                    content: 'Start';
                }
            }
            &.end-w {
                @include background-image(linear-gradient(90deg, transparent, $wBgColor $ticksBlockerFadeW));
                padding-left: $ticksBlockerFadeW;
                right: 0;
                .title:before {
                    content: 'End';
                }
            }
            input[type="text"] {
                @include trans-prop-nice(padding, 250ms);
            }
            .time-range-input input[type="text"] {
                width: $timeCondInputTimeSysDefW;
            }
            .hrs-min-input input[type="text"] {
                width: $timeCondInputDeltaDefW;
            }
            .icon-calendar {
                margin-top: 4px;
            }
        }
    }

    .l-time-conductor-inputs-and-ticks {
        $c: $colorTick;
        height: $r1H;
        mct-conductor-axis {
            display: block;
            position: relative;
            width: 100%;
        }
        .l-axis-holder {
            height: $r1H;
            position: relative;
            width: 100%;
            svg {
                text-rendering: geometricPrecision;
                width: 100%;
                height: 100%;
                > g {
                    font-size: 0.9em;
                }
                path {
                    // Line beneath ticks
                    display: none;
                }
                line {
                    // Tick marks
                    stroke: $c;
                }
                text {
                    // Tick labels
                    fill: $c;
                }
            }
        }
    }
    .l-data-visualization {
        background: $colorTimeCondDataVisBg;
        height: $r2H;
    }

    .l-time-conductor-controls {
        align-items: center;
        margin-top: $interiorMargin;
        .l-time-conductor-zoom-w {
            @include justify-content(flex-end);
            .time-conductor-zoom {
                height: $r3H;
                min-width: 100px;
                width: 20%;
            }
            .time-conductor-zoom-current-range {
                color: $colorTick;
            }
        }
    }

    // Real-time, latest modes
    &.realtime-mode,
    &.latest-mode {
        .time-conductor-icon {
            &:before { color: $colorTimeCondKeyBg; }
            div[class*="hand"] {
                @include animation-name(clock-hands);
                &:before {
                    background: $colorTimeCondKeyBg;
                }
            }
        }

        .l-time-conductor-inputs-holder {
            .l-time-range-input-w {
                input[type="text"]:not(.error) {
                    background: transparent;
                    box-shadow: none;
                    border-radius: 0;
                    padding-left: 0;
                    padding-right: 0;
                    &:hover,
                    &:focus {
                        @include nice-input();
                        padding: $inputTextP;
                    }
                }
                .icon-calendar {
                    display: none;
                }
                &.start-date {
                    display: none;
                }
                &.end-date {
                    pointer-events: none;
                    input[type="text"] {
                        color: pullForward($colorTimeCondKeyBg, 5%);
                        margin-right: $interiorMargin;
                        tab-index: -1;
                    }
                }
            }
        }

        .l-data-visualization {
            background: $colorTimeCondDataVisRtBg !important
        }

        .mode-selector .s-menu-btn {
            @include btnSubtle($colorTimeCondKeyBg, pullForward($colorTimeCondKeyBg, $ltGamma), $colorTimeCondKeyFg);
        }
    }

    // Fixed mode
    &.fixed-mode {
        $i: $glyphIconFixed;
        .time-conductor-icon div[class*="hand"] {
            &.hand-little {
                @include transform(rotate(120deg));
            }
        }
        .mode-selector .s-menu-btn:before {
            content: $i;
        }
    }

    // Realtime mode
    &.realtime-mode {
        $i: $glyphIconRealtime;
        .time-conductor-icon div[class*="hand"] {
            @include animation-name(clock-hands);
        }
        .time-delta:before {
            content: $i;
        }
        .l-time-conductor-inputs-holder .l-time-range-w.end-w .title:before {
            content: 'Now';
        }
        .mode-selector .s-menu-btn:before {
            content: $i;
        }
    }

    // LAD mode
    &.latest-mode {
        $i: $glyphIconLatest;
        .time-conductor-icon div[class*="hand"] {
            @include animation-name(clock-hands-sticky);
            &.hand-big {
                @include animation-duration(5s);
            }
            &.hand-little {
                @include animation-duration(60s);
            }
        }
        .time-delta:before {
            content: $i;
        }
        .l-time-conductor-inputs-holder .l-time-range-w.end-w .title:before {
            content: 'LAD';
        }
        .mode-selector .s-menu-btn:before {
            content: $i;
        }
    }
}

/******************************************************************** MOBILE */

@include phoneandtablet {
    .l-time-conductor-holder { min-width: 0 !important; }
    .super-menu.mini {
        width: 200px;
        height: 100px;
        .pane.menu-item-description {
            display: none;
        }
    }
}

@include phone {
    .l-time-conductor {
        min-width: 0;
        .l-time-conductor-inputs-and-ticks {
            .l-time-conductor-inputs-holder {
                .l-time-range-w {
                    background-image: none !important;
                }
            }
            mct-conductor-axis {
                display: none;
            }
        }
    }
}

@include phonePortrait {
    .l-time-conductor {
        .l-data-visualization,
        .l-time-conductor-zoom-w,
        .time-delta {
            display: none;
        }

        .l-time-conductor-inputs-and-ticks {
            height: auto !important;
            .l-time-conductor-inputs-holder {
                position: relative;
                height: auto !important;

                .l-time-range-w {
                    background-image: none !important;
                    display: block;
                    height: auto !important;
                    padding: 0 !important;
                    position: relative;
                    text-align: left;
                    &:not(:first-child) {
                        margin-top: $interiorMargin;
                    }
                }
            }
        }

        // Fixed mode
        &.fixed-mode {
            .l-time-conductor-inputs-and-ticks {
                .l-time-range-w {
                    .title {
                        width: 30px;
                    }
                }
            }
        }

        // Real-time, latest modes
        &.realtime-mode,
        &.latest-mode {
            .l-time-conductor-inputs-and-ticks {
                .l-time-range-w {
                    &.start-w {
                        display: none;
                    }
                    &.end-w {
                        margin-top: 0;
                        .end-date input[type="text"] {
                            margin: 0;
                            text-align: left;
                        }
                    }
                }
            }
        }
    }
}
